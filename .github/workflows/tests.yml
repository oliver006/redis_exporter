name: Tests

on:
  pull_request:
  push:
    branches:
      - master
      - "v*"

jobs:
  test-stuff:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker
        uses: docker/setup-buildx-action@v3

      - name: Set up Docker Compose
        run: sudo apt-get install docker-compose

      # need to do this before we start the services as they need the TLS creds
      - name: Create test certs for TLS
        run: |
          make test-certs
          chmod 777 ./contrib/tls/*

      - name: Start services
        run: docker-compose up -d
        working-directory: ./

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'

      - name: Install Dependencies
        run: go mod tidy

      - name: Docker logs
        run: |
          echo "${{ toJson(job) }}"
          docker logs "redis_exporter_redis7-tls_1"
          docker logs "redis_exporter_valkey8-tls_1"

      - name: Run tests
        env:
          LOG_LEVEL: "info"
        run: |
          sleep 15
          make checks
          make test


      - name: Run tests - valkey 8
        env:
          LOG_LEVEL: "info"
          TEST_REDIS_URI: "redis://localhost:16382"
          TEST_VALKEY8_TLS_URI: "valkeys://localhost:16386"
          TEST_PWD_REDIS_URI: "redis://:redis-password@localhost:16380"
        run: |
          go test -v -race -p 1 ./...


      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          fail_ci_if_error: true
          files: ./coverage.txt
          token: ${{ secrets.CODECOV_TOKEN }} # required
          verbose: true

      - name: Upload coverage to Coveralls
        uses: coverallsapp/github-action@v2
        with:
          file: coverage.txt

      - name: Stop services
        run: docker-compose down
        working-directory: ./


  lint-stuff:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'

      - name: Install Dependencies
        run: go mod tidy

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: v1.60
          args: "--tests=false"


  build-stuff:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'

      - name: Install Dependencies
        run: go mod tidy

      - name: Build some binaries
        run: make build-some-amd64-binaries

      - name: Generate mixin
        run: make mixin

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Test Docker Image Build - Alpine
        uses: docker/build-push-action@v6
        with:
          push: false
          target: alpine
          tags: user/app:tst
          file: Dockerfile
          build-args: "GOARCH=amd64"

      - name: Test Docker Image Build - Scratch
        uses: docker/build-push-action@v6
        with:
          push: false
          target: scratch-release
          tags: user/app:tst
          file: Dockerfile
          build-args: "GOARCH=amd64"
